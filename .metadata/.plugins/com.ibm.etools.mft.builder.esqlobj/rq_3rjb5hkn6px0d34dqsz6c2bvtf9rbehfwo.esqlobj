/*EATE FUNCTION Main() RETURNS BOOLE*/
	BEGIN
		--Pasar cabeceras de mensaje.
		SET OutputRoot.MQMD    = InputRoot.MQMD;
		SET OutputRoot.MQRFH2  = InputRoot.MQRFH2;		
		-- Declarar referencias
		DECLARE refEnv REFERENCE TO Environment;
		DECLARE refMQRFH2 REFERENCE TO OutputRoot.MQRFH2;
		DECLARE refInpRoot REFERENCE TO OutputRoot;		
		--Copiar Identificador del Mensaje
		SET refEnv.SOAP.ReplyIdentifier = refMQRFH2.SOAP.ReplyIdentifier;       
        --Enviar información para auditoría y headers
		CALL common.procedures.utils.createMsgLogs(refMQRFH2, SERVICE_RQ_TRACE, NM_COMPONENT_QUERY_PRq);
		CALL common.procedures.utils.saveMQM(refInpRoot, refEnv);		
		--Propaga mensaje de auditoría
		PROPAGATE TO TERMINAL 'out1' DELETE NONE;	
		--Nombre de mensajes de respuesta
		DECLARE nmElementRs CHARACTER COALESCE(refMQRFH2.usr.response.MQ.nmNode, 'ApplicationFault');		
		----Guardar Mensaje que llega desde la fachada
		SET InputLocalEnvironment.Variables.XMLNSC.ns:LoginUsuarioReq = InputRoot.XMLNSC.ns:LoginUsuarioReq; 		
		SET refEnv.Variables.headers.MQRFH2.XMLNSC.LoginUsuarioReq    = InputRoot.XMLNSC.ns:LoginUsuarioReq;	
		--Crear referencia del mensaje de Entrada
		DECLARE inputRef REFERENCE TO InputRoot.XMLNSC.ns:LoginUsuarioReq.LogIn;
		--Crear referencia del mensaje hacia el Back-end
		CREATE FIELD OutputRoot.XMLNSC.ns:LoginUsuarioReq.LogIn;
		DECLARE outputRef REFERENCE TO OutputRoot.XMLNSC.ns:LoginUsuarioReq.LogIn;	
		--Crear el mensaje para enviar al partner
		SET outputRef  = inputRef;	
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
